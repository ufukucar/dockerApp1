version: "3.8"

services:

  ### PHP ###
  php8_1:
    build: docker/php8_1
    container_name: php8_1
    ports:
      - "9000:9000"
    volumes:
      - ./api/:/var/www/html
      - ./docker/php8_1/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/php8_1/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php8_1/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend
    
  #NGINX #
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "8000:8000"
      - "8888:8888"
    volumes:
      #- ./apiV1:/var/www/html
      - ./api/:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php8_1  
    networks:
      - backend

  # MySQL Server #
  mysql:
    image: mysql:latest
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql
    depends_on:
      - php8_1
    networks:
      - backend
 
  # Phpmyadmin #
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - mysql
    ports:
      - "8080:80"
    networks:
      - backend


  # REDIS #
  redis:
    image: redis:4.0
    container_name: redis4
    ports:
      - "6382:6379"
    networks:
      - backend

networks:
  backend:
    driver: bridge

